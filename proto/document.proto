syntax = "proto3";

package doc;

// проверка доступности сервера
message AddDocumentRequest {
    int64 docId = 1;
    string secretKey = 2;
}
message AddDocumentResponse {}

// получение содержимого документа
message DocumentContentRequest {
    int64 docId = 1;
}

message DocumentContentResponse {
    int32 version = 1;
    string text = 2;
}

// изменения в документе
message DocumentChanges {
    // тип изменения (вставка или удаление текста)
    enum ChangeType {
        CHANGE_TYPE_INSERT = 0;
        CHANGE_TYPE_DELETE = 1;
    }

    // где и сколько вставлено/удалено
    message Change {
        ChangeType type = 1;
        int64 pos = 2;
        string text = 3;
    }
    
    int64 docId = 1;
    int32 version = 2;
    repeated Change changes = 3;
}

message DocumentChangesRequest {
    int64 docId = 1;
    int32 version = 2;
}

message DocumentChangesResponse {}

// сервис по работе с одним документом
service DocumentService {
    // добавление документа
    rpc AddDocument(AddDocumentRequest) returns (AddDocumentResponse) {}

    // получение контента документа актуальной версии
    rpc GetActualDocumentContent(DocumentContentRequest) returns (DocumentContentResponse) {}

    // получить изменения
    rpc GetDocumentChanges(DocumentChangesRequest) returns (DocumentChanges) {}

    // отправить изменения
    rpc SendDocumentChanges(DocumentChanges) returns (DocumentChangesResponse) {}
}